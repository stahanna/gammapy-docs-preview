
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/starting/analysis_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_starting_analysis_1.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_starting_analysis_1.py:


High level interface
====================

Introduction to 3D analysis using the Gammapy high level interface.

Prerequisites
-------------

-  Understanding the gammapy data workflow, in particular what are DL3
   events and instrument response functions (IRF).

Context
-------

This notebook is an introduction to gammapy analysis using the high
level interface.

Gammapy analysis consists in two main steps.

The first one is data reduction: user selected observations are reduced
to a geometry defined by the user. It can be 1D (spectrum from a given
extraction region) or 3D (with a sky projection and an energy axis). The
resulting reduced data and instrument response functions (IRF) are
called datasets in Gammapy.

The second step consists in setting a physical model on the datasets and
fitting it to obtain relevant physical information.

**Objective: Create a 3D dataset of the Crab using the H.E.S.S. DL3 data
release 1 and perform a simple model fitting of the Crab nebula.**

Proposed approach
-----------------

This notebook uses the high level `~gammapy.analysis.Analysis` class to orchestrate data
reduction. In its current state, `~gammapy.analysis.Analysis` supports the standard
analysis cases of joint or stacked 3D and 1D analyses. It is
instantiated with an `~gammapy.analysis.AnalysisConfig` object that gives access to
analysis parameters either directly or via a YAML config file.

To see what is happening under-the-hood and to get an idea of the
internal API, a second notebook performs the same analysis without using
the `~gammapy.analysis.Analysis` class.

In summary, we have to:

-  Create an `~gammapy.analysis.AnalysisConfig` object and edit it to
   define the analysis configuration:

   -  Define what observations to use
   -  Define the geometry of the dataset (data and IRFs)
   -  Define the model we want to fit on the dataset.

-  Instantiate a `~gammapy.analysis.Analysis` from this configuration
   and run the different analysis steps

   -  Observation selection
   -  Data reduction
   -  Model fitting
   -  Estimating flux points

Finally, we will compare the results against a reference model.

.. GENERATED FROM PYTHON SOURCE LINES 69-72

Setup
-----


.. GENERATED FROM PYTHON SOURCE LINES 72-80

.. code-block:: Python


    from pathlib import Path
    from astropy import units as u

    # %matplotlib inline
    import matplotlib.pyplot as plt
    from gammapy.analysis import Analysis, AnalysisConfig








.. GENERATED FROM PYTHON SOURCE LINES 81-83

Check setup
-----------

.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: Python

    from gammapy.utils.check import check_tutorials_setup

    check_tutorials_setup()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                                                                                                                      | 0.00/223M [00:00<?, ?B/s]      0%|▏                                                                                                                             | 285k/223M [00:00<01:30, 2.58MB/s]      1%|█▏                                                                                                                           | 2.14M/223M [00:00<00:19, 12.0MB/s]      2%|██▊                                                                                                                          | 4.91M/223M [00:00<00:11, 19.6MB/s]      3%|████▎                                                                                                                        | 7.59M/223M [00:00<00:09, 22.9MB/s]      5%|█████▊                                                                                                                       | 10.4M/223M [00:00<00:08, 25.1MB/s]      6%|███████▍                                                                                                                     | 13.2M/223M [00:00<00:08, 26.6MB/s]      7%|████████▊                                                                                                                    | 15.8M/223M [00:00<00:08, 26.9MB/s]      8%|██████████▎                                                                                                                  | 18.4M/223M [00:00<00:08, 26.4MB/s]      9%|███████████▋                                                                                                                 | 20.9M/223M [00:00<00:08, 25.9MB/s]     10%|█████████████                                                                                                                | 23.4M/223M [00:01<00:09, 21.7MB/s]     11%|██████████████▎                                                                                                              | 25.6M/223M [00:01<00:10, 20.4MB/s]     13%|███████████████▊                                                                                                             | 28.3M/223M [00:01<00:09, 22.3MB/s]     14%|█████████████████                                                                                                            | 30.5M/223M [00:01<00:09, 22.3MB/s]     15%|██████████████████▎                                                                                                          | 32.7M/223M [00:01<00:08, 22.4MB/s]     16%|███████████████████▌                                                                                                         | 34.8M/223M [00:01<00:08, 22.0MB/s]     17%|████████████████████▋                                                                                                        | 37.0M/223M [00:01<00:09, 21.5MB/s]     18%|█████████████████████▉                                                                                                       | 39.0M/223M [00:01<00:09, 21.4MB/s]     18%|███████████████████████                                                                                                      | 41.1M/223M [00:01<00:08, 21.6MB/s]     19%|████████████████████████▏                                                                                                    | 43.2M/223M [00:02<00:08, 21.3MB/s]     20%|█████████████████████████▎                                                                                                   | 45.3M/223M [00:02<00:08, 20.7MB/s]     21%|██████████████████████████▍                                                                                                  | 47.2M/223M [00:02<00:08, 20.5MB/s]     22%|███████████████████████████▋                                                                                                 | 49.4M/223M [00:02<00:08, 21.1MB/s]     23%|████████████████████████████▉                                                                                                | 51.6M/223M [00:02<00:08, 21.5MB/s]     24%|██████████████████████████████▏                                                                                              | 53.8M/223M [00:02<00:08, 22.1MB/s]     25%|███████████████████████████████▎                                                                                             | 56.0M/223M [00:02<00:07, 22.2MB/s]     26%|████████████████████████████████▌                                                                                            | 58.1M/223M [00:02<00:08, 20.7MB/s]     27%|█████████████████████████████████▋                                                                                           | 60.1M/223M [00:02<00:08, 19.5MB/s]     28%|██████████████████████████████████▋                                                                                          | 62.0M/223M [00:03<00:09, 18.5MB/s]     29%|███████████████████████████████████▋                                                                                         | 63.8M/223M [00:03<00:09, 18.2MB/s]     29%|████████████████████████████████████▋                                                                                        | 65.5M/223M [00:03<00:09, 18.1MB/s]     30%|█████████████████████████████████████▋                                                                                       | 67.2M/223M [00:03<00:09, 17.3MB/s]     31%|██████████████████████████████████████▌                                                                                      | 68.9M/223M [00:03<00:09, 16.8MB/s]     32%|███████████████████████████████████████▌                                                                                     | 70.5M/223M [00:03<00:09, 16.3MB/s]     33%|████████████████████████████████████████▋                                                                                    | 72.5M/223M [00:03<00:09, 17.4MB/s]     33%|█████████████████████████████████████████▋                                                                                   | 74.3M/223M [00:03<00:08, 17.7MB/s]     34%|██████████████████████████████████████████▋                                                                                  | 76.1M/223M [00:03<00:08, 18.1MB/s]     35%|███████████████████████████████████████████▊                                                                                 | 78.1M/223M [00:03<00:08, 18.8MB/s]     36%|████████████████████████████████████████████▊                                                                                | 79.9M/223M [00:04<00:08, 18.6MB/s]     37%|█████████████████████████████████████████████▊                                                                               | 81.7M/223M [00:04<00:08, 18.1MB/s]     37%|██████████████████████████████████████████████▊                                                                              | 83.5M/223M [00:04<00:07, 18.5MB/s]     38%|███████████████████████████████████████████████▉                                                                             | 85.6M/223M [00:04<00:07, 19.3MB/s]     39%|█████████████████████████████████████████████████                                                                            | 87.5M/223M [00:04<00:07, 19.2MB/s]     40%|██████████████████████████████████████████████████                                                                           | 89.4M/223M [00:04<00:07, 19.2MB/s]     41%|███████████████████████████████████████████████████                                                                          | 91.2M/223M [00:04<00:07, 19.0MB/s]     42%|████████████████████████████████████████████████████▏                                                                        | 93.0M/223M [00:04<00:07, 18.4MB/s]     43%|█████████████████████████████████████████████████████▏                                                                       | 94.8M/223M [00:04<00:07, 18.3MB/s]     43%|██████████████████████████████████████████████████████                                                                       | 96.6M/223M [00:05<00:07, 18.4MB/s]     44%|███████████████████████████████████████████████████████                                                                      | 98.3M/223M [00:05<00:07, 18.2MB/s]     45%|████████████████████████████████████████████████████████▌                                                                     | 100M/223M [00:05<00:07, 18.4MB/s]     46%|█████████████████████████████████████████████████████████▋                                                                    | 102M/223M [00:05<00:06, 19.0MB/s]     47%|██████████████████████████████████████████████████████████▋                                                                   | 104M/223M [00:05<00:06, 18.8MB/s]     47%|███████████████████████████████████████████████████████████▊                                                                  | 106M/223M [00:05<00:06, 18.9MB/s]     48%|████████████████████████████████████████████████████████████▉                                                                 | 108M/223M [00:05<00:06, 19.2MB/s]     49%|█████████████████████████████████████████████████████████████▉                                                                | 110M/223M [00:05<00:06, 19.4MB/s]     50%|██████████████████████████████████████████████████████████████▉                                                               | 111M/223M [00:05<00:06, 17.9MB/s]     51%|████████████████████████████████████████████████████████████████                                                              | 113M/223M [00:05<00:06, 18.2MB/s]     52%|█████████████████████████████████████████████████████████████████▏                                                            | 115M/223M [00:06<00:05, 19.1MB/s]     53%|██████████████████████████████████████████████████████████████████▏                                                           | 117M/223M [00:06<00:05, 19.2MB/s]     53%|███████████████████████████████████████████████████████████████████▎                                                          | 119M/223M [00:06<00:05, 19.1MB/s]     54%|████████████████████████████████████████████████████████████████████▎                                                         | 121M/223M [00:06<00:05, 19.4MB/s]     55%|█████████████████████████████████████████████████████████████████████▍                                                        | 123M/223M [00:06<00:05, 19.1MB/s]     56%|██████████████████████████████████████████████████████████████████████▍                                                       | 125M/223M [00:06<00:05, 19.1MB/s]     57%|███████████████████████████████████████████████████████████████████████▍                                                      | 127M/223M [00:06<00:05, 19.2MB/s]     58%|████████████████████████████████████████████████████████████████████████▌                                                     | 128M/223M [00:06<00:05, 18.8MB/s]     58%|█████████████████████████████████████████████████████████████████████████▌                                                    | 130M/223M [00:06<00:05, 19.1MB/s]     59%|██████████████████████████████████████████████████████████████████████████▋                                                   | 132M/223M [00:07<00:05, 18.9MB/s]     60%|███████████████████████████████████████████████████████████████████████████▋                                                  | 134M/223M [00:07<00:04, 19.2MB/s]     61%|████████████████████████████████████████████████████████████████████████████▊                                                 | 136M/223M [00:07<00:04, 19.2MB/s]     62%|█████████████████████████████████████████████████████████████████████████████▊                                                | 138M/223M [00:07<00:04, 19.3MB/s]     63%|██████████████████████████████████████████████████████████████████████████████▉                                               | 140M/223M [00:07<00:04, 18.8MB/s]     64%|████████████████████████████████████████████████████████████████████████████████                                              | 142M/223M [00:07<00:04, 19.5MB/s]     64%|█████████████████████████████████████████████████████████████████████████████████▏                                            | 144M/223M [00:07<00:04, 19.8MB/s]     65%|██████████████████████████████████████████████████████████████████████████████████▎                                           | 146M/223M [00:07<00:04, 19.5MB/s]     66%|███████████████████████████████████████████████████████████████████████████████████▎                                          | 148M/223M [00:07<00:04, 19.7MB/s]     67%|████████████████████████████████████████████████████████████████████████████████████▍                                         | 149M/223M [00:07<00:03, 19.6MB/s]     68%|█████████████████████████████████████████████████████████████████████████████████████▍                                        | 151M/223M [00:08<00:03, 18.9MB/s]     69%|██████████████████████████████████████████████████████████████████████████████████████▌                                       | 153M/223M [00:08<00:03, 19.5MB/s]     70%|███████████████████████████████████████████████████████████████████████████████████████▋                                      | 155M/223M [00:08<00:03, 19.4MB/s]     70%|████████████████████████████████████████████████████████████████████████████████████████▋                                     | 157M/223M [00:08<00:03, 19.4MB/s]     71%|█████████████████████████████████████████████████████████████████████████████████████████▊                                    | 159M/223M [00:08<00:03, 18.6MB/s]     72%|██████████████████████████████████████████████████████████████████████████████████████████▉                                   | 161M/223M [00:08<00:03, 19.0MB/s]     73%|███████████████████████████████████████████████████████████████████████████████████████████▉                                  | 163M/223M [00:08<00:03, 19.3MB/s]     74%|█████████████████████████████████████████████████████████████████████████████████████████████▏                                | 165M/223M [00:08<00:03, 19.9MB/s]     75%|██████████████████████████████████████████████████████████████████████████████████████████████▏                               | 167M/223M [00:08<00:02, 19.8MB/s]     76%|███████████████████████████████████████████████████████████████████████████████████████████████▎                              | 169M/223M [00:08<00:02, 19.2MB/s]     76%|████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 170M/223M [00:09<00:02, 18.5MB/s]     77%|█████████████████████████████████████████████████████████████████████████████████████████████████▍                            | 172M/223M [00:09<00:02, 19.0MB/s]     78%|██████████████████████████████████████████████████████████████████████████████████████████████████▌                           | 174M/223M [00:09<00:02, 19.4MB/s]     79%|███████████████████████████████████████████████████████████████████████████████████████████████████▊                          | 177M/223M [00:09<00:02, 20.3MB/s]     80%|████████████████████████████████████████████████████████████████████████████████████████████████████▊                         | 179M/223M [00:09<00:02, 19.8MB/s]     81%|█████████████████████████████████████████████████████████████████████████████████████████████████████▉                        | 180M/223M [00:09<00:02, 19.8MB/s]     82%|███████████████████████████████████████████████████████████████████████████████████████████████████████▏                      | 183M/223M [00:09<00:02, 20.3MB/s]     83%|████████████████████████████████████████████████████████████████████████████████████████████████████████▎                     | 185M/223M [00:09<00:01, 20.4MB/s]     84%|█████████████████████████████████████████████████████████████████████████████████████████████████████████▍                    | 187M/223M [00:09<00:01, 20.8MB/s]     85%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▌                   | 189M/223M [00:10<00:01, 20.4MB/s]     86%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▊                  | 191M/223M [00:10<00:01, 20.8MB/s]     86%|████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                 | 193M/223M [00:10<00:01, 20.7MB/s]     87%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████▏               | 195M/223M [00:10<00:01, 21.3MB/s]     88%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▍              | 197M/223M [00:10<00:01, 22.0MB/s]     89%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋             | 199M/223M [00:10<00:01, 22.0MB/s]     90%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊            | 202M/223M [00:10<00:01, 22.1MB/s]     91%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████           | 204M/223M [00:10<00:00, 22.0MB/s]     92%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏         | 206M/223M [00:10<00:00, 21.6MB/s]     93%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍        | 208M/223M [00:10<00:00, 21.3MB/s]     94%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌       | 210M/223M [00:11<00:00, 19.7MB/s]     95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌      | 212M/223M [00:11<00:00, 19.4MB/s]     96%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋     | 214M/223M [00:11<00:00, 19.4MB/s]     97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋    | 215M/223M [00:11<00:00, 19.4MB/s]     98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊   | 217M/223M [00:11<00:00, 19.9MB/s]     98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉  | 219M/223M [00:11<00:00, 20.2MB/s]     99%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████ | 221M/223M [00:11<00:00, 18.8MB/s]    100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 223M/223M [00:11<00:00, 19.8MB/s]
    /usr/lib64/python3.9/tarfile.py:2239: RuntimeWarning: The default behavior of tarfile extraction has been changed to disallow common exploits (including CVE-2007-4559). By default, absolute/parent paths are disallowed and some mode bits are cleared. See https://access.redhat.com/articles/7004769 for more details.
      warnings.warn(

    *** You might want to declare GAMMAPY_DATA as a global env variable
    export GAMMAPY_DATA=$PWD/gammapy-data/dev

    Or as part of your conda environment:
    conda env config vars set GAMMAPY_DATA=$PWD/gammapy-data/dev
    conda conda activate gammapy-dev


    System:

            python_executable      : /home/hstapel/PycharmProjects/projekt_gammapy/gammapy/.tox/build_docs/bin/python 
            python_version         : 3.9.18     
            machine                : x86_64     
            system                 : Linux      


    Gammapy package:

            version                : 1.2.dev2051+gbdbe6fea3.d20240318 
            path                   : /home/hstapel/PycharmProjects/projekt_gammapy/gammapy/.tox/build_docs/lib64/python3.9/site-packages/gammapy 


    Other packages:

            numpy                  : 1.26.4     
            scipy                  : 1.12.0     
            astropy                : 5.2.2      
            regions                : 0.8        
            click                  : 8.1.7      
            yaml                   : 6.0.1      
            IPython                : 8.18.1     
            jupyterlab             : not installed 
            matplotlib             : 3.8.3      
            pandas                 : not installed 
            healpy                 : 1.16.6     
            iminuit                : 2.25.2     
            sherpa                 : 4.16.0     
            naima                  : 0.10.0     
            emcee                  : 3.1.4      
            corner                 : 2.2.2      
            ray                    : 2.9.3      


    Gammapy environment variables:

            GAMMAPY_DATA           : ./gammapy-data 





.. GENERATED FROM PYTHON SOURCE LINES 88-100

Analysis configuration
----------------------

For configuration of the analysis we use the
`YAML <https://en.wikipedia.org/wiki/YAML>`__ data format. YAML is a
machine readable serialisation format, that is also friendly for humans
to read. In this tutorial we will write the configuration file just
using Python strings, but of course the file can be created and modified
with any text editor of your choice.

Here is what the configuration for our analysis looks like:


.. GENERATED FROM PYTHON SOURCE LINES 100-106

.. code-block:: Python


    config = AnalysisConfig()
    # the AnalysisConfig gives access to the various parameters used from logging to reduced dataset geometries
    print(config)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    AnalysisConfig

        general:
            log: {level: info, filename: null, filemode: null, format: null, datefmt: null}
            outdir: .
            n_jobs: 1
            datasets_file: null
            models_file: null
        observations:
            datastore: $GAMMAPY_DATA/hess-dl3-dr1
            obs_ids: []
            obs_file: null
            obs_cone: {frame: null, lon: null, lat: null, radius: null}
            obs_time: {start: null, stop: null}
            required_irf: [aeff, edisp, psf, bkg]
        datasets:
            type: 1d
            stack: true
            geom:
                wcs:
                    skydir: {frame: null, lon: null, lat: null}
                    binsize: 0.02 deg
                    width: {width: 5.0 deg, height: 5.0 deg}
                    binsize_irf: 0.2 deg
                selection: {offset_max: 2.5 deg}
                axes:
                    energy: {min: 1.0 TeV, max: 10.0 TeV, nbins: 5}
                    energy_true: {min: 0.5 TeV, max: 20.0 TeV, nbins: 16}
            map_selection: [counts, exposure, background, psf, edisp]
            background:
                method: null
                exclusion: null
                parameters: {}
            safe_mask:
                methods: [aeff-default]
                parameters: {}
            on_region: {frame: null, lon: null, lat: null, radius: null}
            containment_correction: true
        fit:
            fit_range: {min: null, max: null}
        flux_points:
            energy: {min: null, max: null, nbins: null}
            source: source
            parameters: {selection_optional: all}
        excess_map:
            correlation_radius: 0.1 deg
            parameters: {}
            energy_edges: {min: null, max: null, nbins: null}
        light_curve:
            time_intervals: {start: null, stop: null}
            energy_edges: {min: null, max: null, nbins: null}
            source: source
            parameters: {selection_optional: all}
    




.. GENERATED FROM PYTHON SOURCE LINES 107-110

Setting the data to use
~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 113-121

We want to use Crab runs from the H.E.S.S. DL3-DR1. We define here the
datastore and a cone search of observations pointing with 5 degrees of
the Crab nebula. Parameters can be set directly or as a python dict.

PS: do not forget to setup your environment variable `$GAMMAPY_DATA` to
your local directory containing the H.E.S.S. DL3-DR1 as described in
:ref:`quickstart-setup`.


.. GENERATED FROM PYTHON SOURCE LINES 121-135

.. code-block:: Python


    # We define the datastore containing the data
    config.observations.datastore = "$GAMMAPY_DATA/hess-dl3-dr1"

    # We define the cone search parameters
    config.observations.obs_cone.frame = "icrs"
    config.observations.obs_cone.lon = "83.633 deg"
    config.observations.obs_cone.lat = "22.014 deg"
    config.observations.obs_cone.radius = "5 deg"

    # Equivalently we could have set parameters with a python dict
    # config.observations.obs_cone = {"frame": "icrs", "lon": "83.633 deg", "lat": "22.014 deg", "radius": "5 deg"}









.. GENERATED FROM PYTHON SOURCE LINES 136-139

Setting the reduced datasets geometry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 139-165

.. code-block:: Python


    # We want to perform a 3D analysis
    config.datasets.type = "3d"
    # We want to stack the data into a single reduced dataset
    config.datasets.stack = True

    # We fix the WCS geometry of the datasets
    config.datasets.geom.wcs.skydir = {
        "lon": "83.633 deg",
        "lat": "22.014 deg",
        "frame": "icrs",
    }
    config.datasets.geom.wcs.width = {"width": "2 deg", "height": "2 deg"}
    config.datasets.geom.wcs.binsize = "0.02 deg"

    # We now fix the energy axis for the counts map
    config.datasets.geom.axes.energy.min = "1 TeV"
    config.datasets.geom.axes.energy.max = "10 TeV"
    config.datasets.geom.axes.energy.nbins = 10

    # We now fix the energy axis for the IRF maps (exposure, etc)
    config.datasets.geom.axes.energy_true.min = "0.5 TeV"
    config.datasets.geom.axes.energy_true.max = "20 TeV"
    config.datasets.geom.axes.energy_true.nbins = 20









.. GENERATED FROM PYTHON SOURCE LINES 166-169

Setting the background normalization maker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 169-174

.. code-block:: Python


    config.datasets.background.method = "fov_background"
    config.datasets.background.parameters = {"method": "scale"}









.. GENERATED FROM PYTHON SOURCE LINES 175-178

Setting the exclusion mask
~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 181-186

In order to properly adjust the background normalisation on regions
without gamma-ray signal, one needs to define an exclusion mask for the
background normalisation. For this tutorial, we use the following one
``$GAMMAPY_DATA/joint-crab/exclusion/exclusion_mask_crab.fits.gz``


.. GENERATED FROM PYTHON SOURCE LINES 186-192

.. code-block:: Python


    config.datasets.background.exclusion = (
        "$GAMMAPY_DATA/joint-crab/exclusion/exclusion_mask_crab.fits.gz"
    )









.. GENERATED FROM PYTHON SOURCE LINES 193-204

Setting modeling and fitting parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``Analysis`` can perform a few modeling and fitting tasks besides data
reduction. Parameters have then to be passed to the configuration
object.

Here we define the energy range on which to perform the fit. We also set
the energy edges used for flux point computation as well as the
correlation radius to compute excess and significance maps.


.. GENERATED FROM PYTHON SOURCE LINES 204-211

.. code-block:: Python


    config.fit.fit_range.min = 1 * u.TeV
    config.fit.fit_range.max = 10 * u.TeV
    config.flux_points.energy = {"min": "1 TeV", "max": "10 TeV", "nbins": 4}
    config.excess_map.correlation_radius = 0.1 * u.deg









.. GENERATED FROM PYTHON SOURCE LINES 212-215

We’re all set. But before we go on let’s see how to save or import
``AnalysisConfig`` objects though YAML files.


.. GENERATED FROM PYTHON SOURCE LINES 218-223

Using YAML configuration files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

One can export/import the `~gammapy.modeling.AnalysisConfig` to/from a YAML file.


.. GENERATED FROM PYTHON SOURCE LINES 223-230

.. code-block:: Python


    config.write("config.yaml", overwrite=True)

    config = AnalysisConfig.read("config.yaml")
    print(config)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    AnalysisConfig

        general:
            log: {level: info, filename: null, filemode: null, format: null, datefmt: null}
            outdir: .
            n_jobs: 1
            datasets_file: null
            models_file: null
        observations:
            datastore: gammapy-data/hess-dl3-dr1
            obs_ids: []
            obs_file: null
            obs_cone: {frame: icrs, lon: 83.633 deg, lat: 22.014 deg, radius: 5.0 deg}
            obs_time: {start: null, stop: null}
            required_irf: [aeff, edisp, psf, bkg]
        datasets:
            type: 3d
            stack: true
            geom:
                wcs:
                    skydir: {frame: icrs, lon: 83.633 deg, lat: 22.014 deg}
                    binsize: 0.02 deg
                    width: {width: 2.0 deg, height: 2.0 deg}
                    binsize_irf: 0.2 deg
                selection: {offset_max: 2.5 deg}
                axes:
                    energy: {min: 1.0 TeV, max: 10.0 TeV, nbins: 10}
                    energy_true: {min: 0.5 TeV, max: 20.0 TeV, nbins: 20}
            map_selection: [counts, exposure, background, psf, edisp]
            background:
                method: fov_background
                exclusion: gammapy-data/joint-crab/exclusion/exclusion_mask_crab.fits.gz
                parameters: {method: scale}
            safe_mask:
                methods: [aeff-default]
                parameters: {}
            on_region: {frame: null, lon: null, lat: null, radius: null}
            containment_correction: true
        fit:
            fit_range: {min: 1.0 TeV, max: 10.0 TeV}
        flux_points:
            energy: {min: 1.0 TeV, max: 10.0 TeV, nbins: 4}
            source: source
            parameters: {selection_optional: all}
        excess_map:
            correlation_radius: 0.1 deg
            parameters: {}
            energy_edges: {min: null, max: null, nbins: null}
        light_curve:
            time_intervals: {start: null, stop: null}
            energy_edges: {min: null, max: null, nbins: null}
            source: source
            parameters: {selection_optional: all}
    




.. GENERATED FROM PYTHON SOURCE LINES 231-237

Running the analysis
--------------------

We first create an `~gammapy.analysis.Analysis` object from our
configuration.


.. GENERATED FROM PYTHON SOURCE LINES 237-241

.. code-block:: Python


    analysis = Analysis(config)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting logging config: {'level': 'INFO', 'filename': None, 'filemode': None, 'format': None, 'datefmt': None}




.. GENERATED FROM PYTHON SOURCE LINES 242-248

Observation selection
~~~~~~~~~~~~~~~~~~~~~

We can directly select and load the observations from disk using
`~gammapy.analysis.Analysis.get_observations()`:


.. GENERATED FROM PYTHON SOURCE LINES 248-252

.. code-block:: Python


    analysis.get_observations()




.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/hstapel/PycharmProjects/projekt_gammapy/gammapy/examples/tutorials/starting/analysis_1.py", line 249, in <module>
        analysis.get_observations()
      File "/home/hstapel/PycharmProjects/projekt_gammapy/gammapy/.tox/build_docs/lib64/python3.9/site-packages/gammapy/analysis/core.py", line 141, in get_observations
        self._set_data_store()
      File "/home/hstapel/PycharmProjects/projekt_gammapy/gammapy/.tox/build_docs/lib64/python3.9/site-packages/gammapy/analysis/core.py", line 100, in _set_data_store
        raise FileNotFoundError(f"Datastore not found: {path}")
    FileNotFoundError: Datastore not found: gammapy-data/hess-dl3-dr1




.. GENERATED FROM PYTHON SOURCE LINES 253-256

The observations are now available on the `~gammapy.modeling.Analysis` object. The
selection corresponds to the following ids:


.. GENERATED FROM PYTHON SOURCE LINES 256-260

.. code-block:: Python


    print(analysis.observations.ids)



.. GENERATED FROM PYTHON SOURCE LINES 261-265

To see how to explore observations, please refer to the following
notebook: :doc:`CTA with Gammapy </tutorials/data/cta>` or :doc:`HESS with
Gammapy </tutorials/data/hess>`


.. GENERATED FROM PYTHON SOURCE LINES 268-275

Data reduction
--------------

Now we proceed to the data reduction. In the config file we have chosen
a WCS map geometry, energy axis and decided to stack the maps. We can
run the reduction using `~gammapy.modeling.Analysis.get_datasets()`:


.. GENERATED FROM PYTHON SOURCE LINES 277-280

.. code-block:: Python

    analysis.get_datasets()



.. GENERATED FROM PYTHON SOURCE LINES 281-284

As we have chosen to stack the data, there is finally one dataset
contained which we can print:


.. GENERATED FROM PYTHON SOURCE LINES 284-288

.. code-block:: Python


    print(analysis.datasets["stacked"])



.. GENERATED FROM PYTHON SOURCE LINES 289-295

As you can see the dataset comes with a predefined background model out
of the data reduction, but no source model has been set yet.

The counts, exposure and background model maps are directly available on
the dataset and can be printed and plotted:


.. GENERATED FROM PYTHON SOURCE LINES 295-300

.. code-block:: Python


    counts = analysis.datasets["stacked"].counts
    counts.smooth("0.05 deg").plot_interactive()



.. GENERATED FROM PYTHON SOURCE LINES 301-305

We can also compute the map of the sqrt_ts (significance) of the excess
counts above the background. The correlation radius to sum counts is
defined in the config file.


.. GENERATED FROM PYTHON SOURCE LINES 305-310

.. code-block:: Python


    analysis.get_excess_map()
    analysis.excess_map["sqrt_ts"].plot(add_cbar=True)
    plt.show()


.. GENERATED FROM PYTHON SOURCE LINES 311-318

Save dataset to disk
--------------------

It is common to run the preparation step independent of the likelihood
fit, because often the preparation of maps, PSF and energy dispersion is
slow if you have a lot of data. We first create a folder:


.. GENERATED FROM PYTHON SOURCE LINES 318-323

.. code-block:: Python


    path = Path("analysis_1")
    path.mkdir(exist_ok=True)



.. GENERATED FROM PYTHON SOURCE LINES 324-327

And then write the maps and IRFs to disk by calling the dedicated
`~gammapy.datasets.Datasets.write` method:


.. GENERATED FROM PYTHON SOURCE LINES 327-332

.. code-block:: Python


    filename = path / "crab-stacked-dataset.fits.gz"
    analysis.datasets[0].write(filename, overwrite=True)



.. GENERATED FROM PYTHON SOURCE LINES 333-339

Model fitting
-------------

Now we define a model to be fitted to the dataset. Here we use its YAML
definition to load it:


.. GENERATED FROM PYTHON SOURCE LINES 339-370

.. code-block:: Python


    model_config = """
    components:
    - name: crab
      type: SkyModel
      spatial:
        type: PointSpatialModel
        frame: icrs
        parameters:
        - name: lon_0
          value: 83.63
          unit: deg
        - name: lat_0
          value: 22.014
          unit: deg
      spectral:
        type: PowerLawSpectralModel
        parameters:
        - name: amplitude
          value: 1.0e-12
          unit: cm-2 s-1 TeV-1
        - name: index
          value: 2.0
          unit: ''
        - name: reference
          value: 1.0
          unit: TeV
          frozen: true
    """



.. GENERATED FROM PYTHON SOURCE LINES 371-373

Now we set the model on the analysis object:


.. GENERATED FROM PYTHON SOURCE LINES 373-377

.. code-block:: Python


    analysis.set_models(model_config)



.. GENERATED FROM PYTHON SOURCE LINES 378-380

Finally we run the fit:


.. GENERATED FROM PYTHON SOURCE LINES 382-387

.. code-block:: Python

    analysis.run_fit()

    print(analysis.fit_result)



.. GENERATED FROM PYTHON SOURCE LINES 388-390

This is how we can write the model back to file again:


.. GENERATED FROM PYTHON SOURCE LINES 390-398

.. code-block:: Python


    filename = path / "model-best-fit.yaml"
    analysis.models.write(filename, overwrite=True)

    with filename.open("r") as f:
        print(f.read())



.. GENERATED FROM PYTHON SOURCE LINES 399-402

Flux points
~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 402-422

.. code-block:: Python


    analysis.config.flux_points.source = "crab"
    # Example showing how to change the FluxPointsEstimator parameters:
    analysis.config.flux_points.energy.nbins = 5
    config_dict = {
        "selection_optional": "all",
        "n_sigma": 2,  # Number of sigma to use for asymmetric error computation
        "n_sigma_ul": 3,  # Number of sigma to use for upper limit computation
    }
    analysis.config.flux_points.parameters = config_dict

    analysis.get_flux_points()

    # Example showing how to change just before plotting the threshold on the signal significance
    # (points vs upper limits), even if this has no effect with this data set.
    fp = analysis.flux_points.data
    fp.sqrt_ts_threshold_ul = 5
    ax_sed, ax_residuals = analysis.flux_points.plot_fit()
    plt.show()


.. GENERATED FROM PYTHON SOURCE LINES 423-427

The flux points can be exported to a fits table following the format
defined
`here <https://gamma-astro-data-formats.readthedocs.io/en/latest/spectra/flux_points/index.html>`_


.. GENERATED FROM PYTHON SOURCE LINES 427-432

.. code-block:: Python


    filename = path / "flux-points.fits"
    analysis.flux_points.write(filename, overwrite=True)



.. GENERATED FROM PYTHON SOURCE LINES 433-436

To check the fit is correct, we compute the map of the sqrt_ts of the
excess counts above the current model.


.. GENERATED FROM PYTHON SOURCE LINES 436-442

.. code-block:: Python


    analysis.get_excess_map()
    analysis.excess_map["sqrt_ts"].plot(add_cbar=True, cmap="RdBu", vmin=-5, vmax=5)
    plt.show()



.. GENERATED FROM PYTHON SOURCE LINES 443-452

What’s next
-----------

You can look at the same analysis without the high level interface in
:doc:`/tutorials/starting/analysis_2`

You can see how to perform a 1D spectral analysis of the same data in
:doc:`/tutorials/analysis-1d/spectral_analysis`



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 19.286 seconds)


.. _sphx_glr_download_tutorials_starting_analysis_1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/notebooks/dev/tutorials/starting/analysis_1.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: analysis_1.ipynb <analysis_1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: analysis_1.py <analysis_1.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
